{
  "name": "inline-critical",
  "version": "2.4.2",
  "description": "Inline critical-path css and load the existing stylesheets asynchronously",
  "main": "index.js",
  "scripts": {
    "test": "xo && nyc mocha test/index.js --timeout 5000",
    "prepublish": "nsp check",
    "coveralls": "nyc report --reporter=text-lcov | coveralls"
  },
  "files": [
    "index.js",
    "cli.js"
  ],
  "bin": {
    "inline-critical": "cli.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bezoerb/inline-critical"
  },
  "keywords": [
    "css",
    "inline",
    "loadcss",
    "critical-path"
  ],
  "author": {
    "name": "Ben ZÃ¶rb",
    "email": "ben@sommerlaune.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bezoerb/inline-critical/issues"
  },
  "dependencies": {
    "cave": "2.0.0",
    "cheerio": "0.22.0",
    "clean-css": "^4.1.5",
    "css": "2.2.1",
    "detect-indent": "5.0.0",
    "dom-serializer": "0.1.0",
    "fg-loadcss": "1.3.1",
    "get-stdin": "5.0.1",
    "indent-string": "3.1.0",
    "lodash": "4.17.4",
    "meow": "3.7.0",
    "normalize-newline": "3.0.0",
    "reaver": "2.0.0",
    "resolve": "1.3.3",
    "slash": "1.0.0",
    "uglify-js": "^3.0.23"
  },
  "devDependencies": {
    "chai": "^4.0.2",
    "concat-stream": "1.6.0",
    "coveralls": "2.13.1",
    "mocha": "^3.4.2",
    "mockery": "^2.1.0",
    "nsp": "2.6.3",
    "nyc": "^11.0.3",
    "read-package-json": "^2.0.10",
    "xo": "0.18.2"
  },
  "xo": {
    "space": 4,
    "envs": [
      "node",
      "mocha"
    ],
    "ignores": [
      "test/*.js"
    ]
  },
  "engines": {
    "node": ">= 4"
  },
  "readme": "# inline-critical\n\nInline critical-path css and load the existing stylesheets asynchronously.\nExisting link tags will also be wrapped in ```<noscript>``` so the users with javscript disabled will see the site rendered normally.\n\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Build Status][appveyor-image]][appveyor-url] [![Dependency Status][depstat-image]][depstat-url] [![Download][dlcounter-image]][dlcounter-url] [![Coverage Status][coveralls-image]][coveralls-url]\n\n## Installation\n\nThis module is installed via npm:\n\n``` bash\n$ npm install inline-critical\n```\n\n## Example Usage\n\n``` js\nvar inline = require('inline-critical');\nvar html = fs.readFileSync('test/fixtures/index.html', 'utf8');\nvar critical = fs.readFileSync('test/fixtures/critical.css', 'utf8');\n\nvar inlined = inline(html, critical);\n```\n\n## Example Usage ignoring stylesheet per regex\n\n\n``` js\nvar inline = require('inline-critical');\nvar html = fs.readFileSync('test/fixtures/index.html', 'utf8');\nvar critical = fs.readFileSync('test/fixtures/critical.css', 'utf8');\n\nvar inlined = inline(html, critical, {\n  ignore: [/bootstrap/]\n});\n```\n\n## CLI\n\ninline-critical works well with standard input. \nYou can either pass in the html \n```bash\ncat index.html | inline-critical critical.css\n```\nor just flip things around\n```bash\ncat critical.css | inline-critical index.html\n```\nor pass in the fileas as an option\n```bash\ninline-critical critical.css index.html\n```\nwithout having to worry about the correct order\n```bash\ninline-critical index.html critical.css\n```\nRun `inline-critical --help` to see the list of options.\n\n## inline(html, styles, options?)\n\n- `html` is the HTML you want to use to inline your critical styles, or any other styles\n- `styles` are the styles you're looking to inline\n- `options` is an optional configuration object\n  - `minify` will minify the styles before inlining (default: true)\n  - `extract` will remove the inlined styles from any stylesheets referenced in the HTML\n  - `basePath` will be used when extracting styles to find the files references by `href` attributes\n  - `ignore` ignore matching stylesheets when inlining.\n  - `selector` defines the element used by loadCSS as a reference for inlining.\n\n## License\n\nMIT\n\n[npm-url]: https://npmjs.org/package/inline-critical\n[npm-image]: https://badge.fury.io/js/inline-critical.svg\n\n[travis-url]: https://travis-ci.org/bezoerb/inline-critical\n[travis-image]: https://secure.travis-ci.org/bezoerb/inline-critical.svg?branch=master\n\n[appveyor-url]: https://ci.appveyor.com/project/bezoerb/inline-critical/branch/master\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/qb9esocjkpp6hw3q/branch/master?svg=true\n\n[depstat-url]: https://david-dm.org/bezoerb/inline-critical\n[depstat-image]: https://david-dm.org/bezoerb/inline-critical.svg\n\n[dlcounter-url]: https://www.npmjs.com/package/inline-critical\n[dlcounter-image]: https://img.shields.io/npm/dm/inline-critical.svg\n\n[coveralls-url]: https://coveralls.io/github/bezoerb/inline-critical?branch=master\n[coveralls-image]: https://coveralls.io/repos/github/bezoerb/inline-critical/badge.svg?branch=master\n",
  "readmeFilename": "README.md",
  "_id": "inline-critical@2.4.2",
  "dist": {
    "shasum": "3a8a6b935703e99f6b7c7f87b5a0b153d34ea4cd"
  },
  "_from": "inline-critical@^2.4.2",
  "_resolved": "https://registry.npmjs.org/inline-critical/-/inline-critical-2.4.2.tgz"
}
